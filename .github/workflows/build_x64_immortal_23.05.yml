name: immortal
on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'ssh-action'
        required: false
        default: 'ssh-actions'

  schedule:
    - cron: 0 0 1 * *

env:
  # ... [原有环境变量保持不变] ...

jobs:
  build:
    runs-on: ubuntu-20.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    env:
      FOLDER_NAME: ${{ matrix.target }}
      WORKSPACE: ${{ github.workspace }}/build  # 新增统一工作空间变量
    strategy:
      fail-fast: false
      matrix:
        target: [Immortalwrt_source]

    steps:
    # ... [准备结束、读取设置、源码版本步骤保持不变] ...

    - name: 编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install -y gawk git gettext libssl-dev xsltproc zip
        # 创建工作目录并设置权限
        mkdir -p "${{ env.WORKSPACE }}/${{ matrix.target }}"
        chmod -R 755 "${{ env.WORKSPACE }}"
        git config --global user.email "41898282+github-[bot]@users.noreply.github.com"
        git config --global user.name "github-[bot]"

    - name: 下载源码
      working-directory: ${{ env.WORKSPACE }}/${{ matrix.target }}  # 修正工作目录
      run: |
        git clone -b "$REPO_BRANCH" --single-branch "$REPO_URL" openwrt
        cd openwrt
        ./scripts/feeds update -a > /dev/null 2>&1
        # 创建符号链接到主工作区
        ln -sf "${{ env.WORKSPACE }}/${{ matrix.target }}/openwrt" "$GITHUB_WORKSPACE/openwrt"
        echo "Home=$GITHUB_WORKSPACE/openwrt" >> $GITHUB_ENV
        echo "PATH1=$GITHUB_WORKSPACE/openwrt/build/${{ matrix.target }}" >> $GITHUB_ENV

    - name: 加载设置
      run: |
        echo "Compile_Date=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
        # 修正文件复制路径
        cp -Rf ${{ env.WORKSPACE }}/${{ matrix.target }}/openwrt/* openwrt/
        mv -f "$Home/build/common/*.sh" "$PATH1/"
        # ... [后续操作保持不变] ...

    # ... [后续步骤保持不变] ...
